# This is a basic workflow to help you get started with Actions

name: Unit Tests
#testing
# Controls when the workflow will run
on:
  #Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "macos"]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #define node version used in runner
    strategy:
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Use Node.js ${{ matrix.node-version }}
        # uses one of versions defined and install 
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Runs a set of commands using the runners shell
      - name: npm install
        run: npm ci
      - name: tests
        run: npm test
      - name: coverage
        run: npm test -- --coverage
      
      - uses: actions/upload-artifact@v2  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: coverage-report
          path: coverage/

      - name: Test Report
        uses: dorny/test-reporter@v1.6.0
        #if: github.repository == 'octo-org/octo-repo-prod'
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: jest-junit.xml   # Path to test results
          reporter: jest-junit        # Format of test results
          # Personal access token used to interact with Github API
          # Default: ${{ github.token }}
          token: '${{ secrets.TOKEN }}'
          
          
